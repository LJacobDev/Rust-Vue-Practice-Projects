
p01-rust-vue-sqlite-blog

Basic plan steps

- set up a Rust back end using Rocket that can be accessed using curl commands

    - added rocket create
    - set up basic boilerplate that can give a 'hello world' str when accessing localhost:8000

- give it a basic ability to serve a Vue-based front end starting page

    - added ability to go to localhost:8000/ and see the Vue 'you did it!' initial page
    - cleaned up scaffolding files, making a fresh slate to start making things
    - added tailwindcss to help speed up UI building


- add a Vue form that enables writing a blog post with title, blog text, perhaps category selection

    - there should be a main root page that shows all the blog titles, or says "no posts" if none exist yet
    - there should be a button that says "create post" and which takes the user to a new page that has a creation form.  It could be acceptable to simply make it into a component that dynamically replaces the blog title list component, but I prefer to make it something that 'loads a different page' like "/createpost" rather than handling it all on "/" with dynamic components



- make the form submit a post request to the back end

- create back end endpoint that accepts the post request with JSON and stores it as entry into sqlite database

- make an endpoint that retrieves existing blog posts titles to be shown as a list of clickable titles in the frontend

- when a title is clicked on, open the specific blog post and show in a template for reading the post contents

